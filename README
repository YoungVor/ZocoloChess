
Build instructions

Build schema
cd ~/Projects/Zocolo
# We want mutable because the common case will be updating one piece and adding one move 
flatc -c Chess.fbs --gen-mutable

For IDE:
cd ~/Projects/ZocoloBuild
cmake -S ../Zocolo -B ../ZocoloBuild -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=1
rm ../Zocolo/compile_commands.json && ln -s ../ZocoloBuild/compile_commands.json ../Zocolo/compile_commands.json

Current stage:
https://flatbuffers.dev/flatbuffers_guide_use_cpp.html


11/14:
* Default board data and class construction
* Define chess client and simple API
* Update move schema to be 2 coordinates



schema is various lists of pieces (which can increase)
and list of moves

locally, keeping a grid 
choice:
must either rewrite game state from scratch, or update in place
won't make a big difference given the size, but the algorithm should be simpler if we have one path for serializing the data.

init board data
move:
change grid
change data

contract/invariables:
game changes the internal game logic's struct, then serializes the new 
one method to load the data from current board's state
